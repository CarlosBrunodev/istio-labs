apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: x-client-id-filter
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      app: istio-ingressgateway
  configPatches:
    # The first patch adds the lua filter to the listener/http connection manager
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value: # lua filter specification
          name: envoy.lua
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
            inlineCode: |
              local function ends_with(str, ending)
                return ending == "" or str:sub(-#ending) == ending
              end
              function envoy_on_request(handle)
                local path = handle:headers():get(":path")
                while ends_with(path, "/") do
                  path = string.sub(path, 1, -2)
                end
                handle:headers():replace(":path", path)
              end
